{"version":3,"sources":["components/sidebar/nav/nav.module.css","components/dialogs/dialogs.module.css","components/users/user/user.module.css","components/sidebar/friends/friend/friend.module.css","components/sidebar/friends/friends.module.css","components/header/header.module.css","components/profile/posts/post/post.module.css","components/sidebar/sidebar.module.css","components/users/users.module.css","components/header/header.jsx","redux/profile-reducer.js","components/profile/posts/post/post.jsx","components/profile/posts/posts.jsx","components/profile/posts/posts-container.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/profile.jsx","components/news/news.jsx","components/music/music.jsx","components/settings/settings.jsx","components/sidebar/friends/friend/friend.jsx","components/sidebar/friends/friends.jsx","components/sidebar/friends/friends-container.jsx","components/sidebar/nav/nav.jsx","components/sidebar/sidebar.jsx","redux/message-reducer.js","components/dialogs/messageItem/messageItem.jsx","components/dialogs/userItem/userItem.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogs-container.jsx","redux/users-reducer.js","components/users/user/user.jsx","components/users/users.jsx","components/users/users-container.jsx","App.js","reportWebVitals.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Header","className","classes","header","src","ADD_POST","UPDATE_POST","initialState","postContent","id","postText","likesCount","realTimePost","profileReducer","state","action","type","stateCopy","lastPost","length","newPost","push","updatedPost","newPostText","Post","props","post","message","likeCount","Posts","resultPostContent","posts","map","el","onChange","updatedPostText","target","value","updatePostText","name","cols","rows","onClick","addPost","PostsContainer","connect","profilePage","dispatch","ProfileInfo","Profile","News","Music","Settings","Friend","friend","friendAvatar","width","height","alt","friendName","Friends","resultFriendData","friendsData","avatar","friends","friendsTitle","friendsList","FriendsContainer","sidebar","Nav","nav","navList","to","link","activeClassName","active","exact","Sidebar","ADD_MESSAGE","UPDATE_MESSAGE","dialogData","userName","dialogContent","messageText","realTimeMessage","messageReducer","lastMessage","newMessage","newMessageText","DialogsMessageItem","dialogsMessageItem","DialogsUserItem","path","dialogsUserItem","dialogsUserLink","Dialogs","resultDialogData","resultDialogContent","dialogs","dialogsUserList","dialogsMessageList","newMessageBox","changedMessage","onChangeMessage","addMessage","DialogsContainer","messagePage","text","TOGGLED","SET_USERS","users","usersReducer","userId","followed","User","user","leftBox","userPhoto","ava","switchFollow","mainBox","mainInfo","status","location","country","city","Users","setUsers","resultUsersContent","UsersContainer","usersPage","toggleAC","setUsersAC","App","basename","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","reducers","combineReducers","store","createStore","renderPage","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.fa4ec02b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navList\":\"nav_navList__2YsQs\",\"link\":\"nav_link__maiMr\",\"active\":\"nav_active__3Wplm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__21L3r\",\"dialogsUserList\":\"dialogs_dialogsUserList__1RHsz\",\"dialogsUserItem\":\"dialogs_dialogsUserItem__1umEQ\",\"dialogsUserLink\":\"dialogs_dialogsUserLink__3ykb7\",\"active\":\"dialogs_active__1KQzF\",\"dialogsMessageList\":\"dialogs_dialogsMessageList__3gMrq\",\"dialogsMessageItem\":\"dialogs_dialogsMessageItem__3Wmsx\",\"newMessageBox\":\"dialogs_newMessageBox__2hfM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__3QTfp\",\"leftBox\":\"user_leftBox__1h6Tq\",\"userPhoto\":\"user_userPhoto__1UAqG\",\"mainBox\":\"user_mainBox__1rJ6g\",\"mainInfo\":\"user_mainInfo__3TKP-\",\"location\":\"user_location__3mIka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__BKIQp\",\"friendAvatar\":\"friend_friendAvatar__2C5a9\",\"friendName\":\"friend_friendName__3m2cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"friends_friends__3sRjP\",\"friendsTitle\":\"friends_friendsTitle__P_sV4\",\"friendsList\":\"friends_friendsList__20GJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2p9P-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__1l1bU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__iR-BC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__1rTy4\"};","import classes from './header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://lh3.googleusercontent.com/oFOFK_rpegm_ONODDFRKFtDC_NucLGBZPx8M-5nMi-78NkRoupHKoY8K7isl5gfDXXVCUg=s170'/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_POST = 'UPDATE-POST';\r\n\r\nlet initialState = {\r\n    postContent: [\r\n        { id: 1, postText: 'Here I sit', likesCount: 1 },\r\n        { id: 2, postText: 'For meditate', likesCount: 4 },\r\n        { id: 3, postText: 'Should I shit', likesCount: 8 },\r\n        { id: 4, postText: 'Or masturbate', likesCount: 8 }\r\n    ],\r\n\r\n    realTimePost: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let stateCopy = {...state};\r\n            stateCopy.postContent = [...state.postContent];\r\n\r\n            let lastPost = stateCopy.postContent[stateCopy.postContent.length - 1];\r\n            let newPost = {\r\n                id: lastPost.id + 1,\r\n                postText: stateCopy.realTimePost,\r\n                likesCount: 0\r\n            };\r\n            \r\n            stateCopy.postContent.push(newPost);\r\n            stateCopy.realTimePost = '';\r\n\r\n            return stateCopy;\r\n        }\r\n\r\n        case UPDATE_POST: {\r\n            let stateCopy = {...state};\r\n\r\n            let updatedPost = action.newPostText;\r\n            stateCopy.realTimePost = updatedPost;\r\n\r\n            return stateCopy;\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updatePostTextActionCreator = (newPostText) => ({type: UPDATE_POST, newPostText: newPostText});\r\n\r\nexport default profileReducer;","import classes from './post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1lXdNqBkPOVpU_tHfrbGsQAuE6wgNQ9D40w&usqp=CAU' />\r\n            {props.message}  {/*передаем в фигурных скобках, так как это внутри jsx, js свойство message, которое подкачивается из атрибута тега Post*/}\r\n            <div>\r\n                <span>{props.likeCount} Like</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './post/post';\r\nimport classes from './posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n    let resultPostContent = props.posts.map(el => <Post key={el.id} message={el.postText} likeCount={el.likesCount}/>)\r\n\r\n\r\n    let addPost = () => {\r\n        if (props.realTimePost) {\r\n            props.addPost();\r\n        }\r\n        \r\n    };\r\n\r\n    let updatePostText = (el) => {\r\n        let updatedPostText = el.target.value;\r\n        props.updatePostText(updatedPostText);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>My posts</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={updatePostText} name=\"\" id=\"\" cols=\"20\" rows=\"5\" value={props.realTimePost}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={ addPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {resultPostContent}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updatePostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport Posts from './posts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postContent,\r\n        realTimePost: state.profilePage.realTimePost\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updatePostText: (updatedPostText) => {\r\n            let action = updatePostTextActionCreator(updatedPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import classes from './profileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS62oOaTrZg_IOaAlV7_Qupw6liiJpMWRcpbQ&usqp=CAU'/>\r\n            </div>\r\n            <div>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import PostsContainer from './posts/posts-container';\r\nimport classes from './profile.module.css';\r\nimport ProfileInfo from './profileInfo/profileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <PostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import classes from './news.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import classes from './music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import classes from './settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import classes from './friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <li className={classes.friend}>\r\n            <img src={props.friendAvatar} className={classes.friendAvatar} width=\"30\" height=\"30\" alt=\"\" />\r\n            <span className={classes.friendName}>{props.friendName}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Friend;","import Friend from './friend/friend';\r\nimport classes from './friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n\r\n    let resultFriendData = props.friendsData.map(el => <Friend key={el.id} friendAvatar={el.avatar} friendName={el.friendName} />)\r\n\r\n    return (\r\n        <div className={classes.friends}>\r\n            <h2 className={classes.friendsTitle}>Friends</h2>\r\n            <ul className={classes.friendsList}>\r\n                {resultFriendData}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friends;","import { connect } from 'react-redux';\r\nimport Friends from './friends';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps)(Friends);\r\n\r\nexport default FriendsContainer;","import classes from './nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul className={classes.navList}>\r\n                <li>\r\n                    <NavLink to='/profile' className={classes.link} activeClassName={classes.active}>Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to='/dialogs' className={classes.link} activeClassName={classes.active}>Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/users' className={classes.link} activeClassName={classes.active}>Users</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/news' className={classes.link} activeClassName={classes.active}>News</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/music' className={classes.link} activeClassName={classes.active}>Music</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/settings' className={classes.link} activeClassName={classes.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import FriendsContainer from \"./friends/friends-container\";\r\nimport Nav from \"./nav/nav\";\r\nimport classes from \"./sidebar.module.css\"\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div className={classes.sidebar}>\r\n            <Nav/>\r\n            <FriendsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_MESSAGE = 'UPDATE-MESSAGE';\r\n\r\nlet initialState = {\r\n    \r\n    dialogData: [\r\n        { id: 1, userName: 'Rachel' },\r\n        { id: 2, userName: 'Monica' },\r\n        { id: 3, userName: 'Phibi' },\r\n        { id: 4, userName: 'Ross' },\r\n        { id: 5, userName: 'Chandler' },\r\n        { id: 6, userName: 'Joey' }\r\n    ],\r\n\r\n    dialogContent: [\r\n        { id: 1, messageText: 'How' },\r\n        { id: 2, messageText: 'U' },\r\n        { id: 3, messageText: 'Doin' }\r\n    ],\r\n\r\n    realTimeMessage: ''\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogContent = [...state.dialogContent];\r\n\r\n            let lastMessage = stateCopy.dialogContent[stateCopy.dialogContent.length-1];\r\n            let newMessage = {\r\n                id: lastMessage.id + 1,\r\n                messageText: stateCopy.realTimeMessage\r\n            };\r\n\r\n            stateCopy.dialogContent.push(newMessage);\r\n            stateCopy.realTimeMessage = '';\r\n\r\n            return stateCopy;\r\n        }\r\n        \r\n        case UPDATE_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                realTimeMessage: action.newMessageText\r\n            }\r\n\r\n            // let stateCopy = {...state};\r\n\r\n            // \r\n            // stateCopy.realTimeMessage = updatedMessage;\r\n            // return stateCopy;\r\n        }\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\nexport const onChangeMessageActionCreator = (newMessageText) => ({type: UPDATE_MESSAGE, newMessageText: newMessageText});\r\n\r\nexport default messageReducer;","import classes from './../dialogs.module.css';\r\n\r\nconst DialogsMessageItem = (props) => {\r\n    return (\r\n        <li className={classes.dialogsMessageItem}>{props.message}</li>\r\n    );\r\n};\r\n\r\nexport default DialogsMessageItem;","import { NavLink } from 'react-router-dom';\r\nimport classes from './../dialogs.module.css';\r\n\r\nconst DialogsUserItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <li className={classes.dialogsUserItem}>\r\n            <NavLink to={path} className={classes.dialogsUserLink}>{props.userName}</NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DialogsUserItem;","import React from 'react';\r\nimport classes from './dialogs.module.css';\r\nimport DialogsMessageItem from './messageItem/messageItem';\r\nimport DialogsUserItem from './userItem/userItem';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let resultDialogData = props.dialogData.map(el => <DialogsUserItem key={el.id} id={el.id} userName={el.userName}/>);\r\n\r\n    let resultDialogContent = props.dialogContent.map(el => <DialogsMessageItem key={el.id} message={el.messageText}/>)\r\n\r\n    let addMessage = () => {\r\n        if (props.realTimeMessage) {\r\n            props.addMessage();\r\n        }\r\n    };\r\n\r\n    let onChangeMessage = (el) => {\r\n        let changedMessage = el.target.value;\r\n        props.onChangeMessage(changedMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <ul className={classes.dialogsUserList}>\r\n                {resultDialogData}\r\n            </ul>\r\n            <ul className={classes.dialogsMessageList}>\r\n                {resultDialogContent}\r\n            </ul>\r\n            <div>\r\n            <div className={classes.newMessageBox}>\r\n                <textarea onChange={onChangeMessage} name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={props.realTimeMessage}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={addMessage}>Add message</button>\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMessageActionCreator, onChangeMessageActionCreator } from '../../redux/message-reducer';\r\nimport Dialogs from './dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogData: state.messagePage.dialogData,\r\n        dialogContent: state.messagePage.dialogContent,\r\n        realTimeMessage: state.messagePage.realTimeMessage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        onChangeMessage: (text) => {\r\n            let action = onChangeMessageActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","const TOGGLED = 'TOGGLED';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\n\r\nlet initialState = {\r\n    users: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLED: {\r\n            let stateCopy = {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id === +action.userId) {\r\n                        return {...el, followed: !el.followed};\r\n                    }\r\n                    return el;\r\n                })\r\n            };\r\n            return stateCopy;\r\n        }\r\n\r\n        case SET_USERS: {\r\n            let stateCopy = {\r\n                ...state, \r\n                users: [...action.users]\r\n            }\r\n            return stateCopy;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const toggleAC = (userId) => ({type: TOGGLED, userId: userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users: users});\r\n\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport classes from \"./user.module.css\"\r\n\r\nconst User = (props) => {\r\n\r\n    let switchFollow = (el) => {\r\n        let userId = el.target.id;\r\n        props.switchFollow(userId);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div className={classes.leftBox}>\r\n                <img className={classes.userPhoto} src={props.ava} alt=\"\" />\r\n                <button id={props.userId} onClick={switchFollow}>\r\n                    {props.followed ? 'Unfollow' : 'Follow'}\r\n                </button>\r\n            </div>\r\n            <div className={classes.mainBox}>\r\n                <div className={classes.mainInfo}>\r\n                    <span>{props.userName}</span>\r\n                    <span>{props.status}</span>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <span>{props.country}</span>\r\n                    <span>{props.city}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport User from \"./user/user\";\r\nimport classes from \"./users.module.css\";\r\n\r\nconst Users = (props) => {\r\n\r\n    if (props.users.length === 0) {\r\n        let usersData = [\r\n            {id: 1, userName: 'Leonardo', ava: 'https://avatarko.ru/img/kartinka/27/TMNT_Leonardo_26716.jpg', status: 'blue', location: {city: 'Turin', country: 'Italy'}, followed: true},\r\n            {id: 2, userName: 'Donatello', ava: 'https://avatarko.ru/img/kartinka/27/TMNT_Donatello_26726.jpg', status: 'purple', location: {city: 'Turin', country: 'Italy'}, followed: true},\r\n            {id: 3, userName: 'Michelangelo', ava: 'https://avatarko.ru/img/kartinka/27/TMNT_Michelangelo_26682.jpg', status: 'orange', location: {city: 'Turin', country: 'Italy'}, followed: false},\r\n            {id: 4, userName: 'Raphael', ava: 'https://avatarko.ru/img/kartinka/27/TMNT_Raphael_26697.jpg', status: 'red', location: {city: 'Turin', country: 'Italy'}, followed: false}\r\n        ];\r\n\r\n        props.setUsers(usersData);\r\n    }\r\n\r\n    let resultUsersContent = props.users.map(el => <User ava={el.ava} status={el.status} switchFollow={props.switchFollow} userId={el.id} userName={el.userName} city={el.location.city} country={el.location.country} followed={el.followed}/>)\r\n\r\n    return (\r\n            <div className={classes.users}>\r\n                {resultUsersContent}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleAC, setUsersAC } from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        switchFollow: (userId) => {\r\n            dispatch(toggleAC(userId));\r\n        },\r\n        \r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n};\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","import './App.css';\nimport Header from './components/header/header';\nimport Profile from './components/profile/profile';\nimport News from './components/news/news';\nimport Music from './components/music/music';\nimport Settings from './components/settings/settings';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Sidebar from './components/sidebar/sidebar';\nimport DialogsContainer from './components/dialogs/dialogs-container';\nimport UsersContainer from './components/users/users-container';\n\n\nconst App = (props) => {\n  return (\n    <BrowserRouter basename=\"/social-network\">\n      <div className='app-wrapper'>\n        <Header />\n        <Sidebar/>\n        <div className='app-wrapper-content'>\n          <Route path='/profile' render={ () => <Profile/>} />\n          <Route path='/dialogs' render={ () => <DialogsContainer/>} />\n          <Route path='/users' render={ () => <UsersContainer/>} />\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    friendsData: [\r\n        { id: 1, friendName: 'Rachel', avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXeIuKElSOTid6MF787c7UTMwFPgQa7oF1ew&usqp=CAU' },\r\n        { id: 2, friendName: 'Monica', avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXeIuKElSOTid6MF787c7UTMwFPgQa7oF1ew&usqp=CAU' },\r\n        { id: 3, friendName: 'Phibi', avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXeIuKElSOTid6MF787c7UTMwFPgQa7oF1ew&usqp=CAU' }\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messageReducer from \"./message-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagePage: messageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nlet renderPage = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrenderPage(store.getState());\nstore.subscribe(() => {\n  let state = store.getState();\n  renderPage(state);\n});\n\nexport { renderPage };\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}